{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingName","push","name","value","ingOutput","map","ing","style","textTransform","display","margin","border","className","classes","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","ord","ingrediants","id","Component","connect","state","order","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,MAAQ,uB,yGC2BXC,EAzBD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAWF,EAAMC,YACtBA,EAAYE,KAAK,CACbC,KAAMF,EACNG,MAAOL,EAAMC,YAAYC,KAIjC,IAAMI,EAAYL,EAAYM,KAAI,SAAAC,GAC9B,OAAO,uBACPC,MAAO,CAACC,cAAc,aACtBC,QAAS,eACTC,OAAQ,QACRC,OAAQ,kBAJD,UAKUL,EAAIJ,KALd,KAKsBI,EAAIH,MAL1B,OAKFG,EAAIJ,SAGb,OACI,sBAAKU,UAAWC,IAAQhB,MAAxB,UACI,8CAAiBO,EAAjB,OACA,wCAAU,0CAAaU,OAAOC,WAAWjB,EAAMkB,OAAOC,QAAQ,a,wCChBpEC,E,uKAGF,WACIC,KAAKrB,MAAMsB,cAAcD,KAAKrB,MAAMuB,MAAOF,KAAKrB,MAAMwB,U,oBAG1D,WACI,IAAIC,EAAS,cAACC,EAAA,EAAD,IAOb,OANKL,KAAKrB,MAAM2B,UACbF,EAASJ,KAAKrB,MAAMyB,OAAOlB,KAAI,SAAAqB,GAAG,OACpC,cAAC,EAAD,CAAoB3B,YAAa2B,EAAIC,YAAaX,MAAOU,EAAIV,OAAjDU,EAAIE,QAKb,8BACKL,Q,GAjBIM,aAoCNC,uBAbS,SAAAC,GACpB,MAAO,CACHR,OAAQQ,EAAMC,MAAMT,OACpBE,QAASM,EAAMC,MAAMP,QACrBJ,MAAOU,EAAME,KAAKZ,MAClBC,OAAQS,EAAME,KAAKX,WAGA,SAAAY,GACvB,MAAO,CACHd,cAAe,SAACC,EAAOC,GAAR,OAAkBY,EAASC,IAAoBd,EAAOC,QAG9DQ,CAA4CM,YAAiBlB,EAAQmB","file":"static/js/5.0a46f4e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1iS8U\"};","import React from \"react\";\r\nimport classes from './Order.module.css';\r\n\r\nconst Order = (props) => {\r\n    const ingredients = [];\r\n    for (let ingName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingName,\r\n            value: props.ingredients[ingName]\r\n        });\r\n    }\r\n\r\n    const ingOutput = ingredients.map(ing =>{\r\n        return <span \r\n        style={{textTransform:'capitalize',\r\n        display: 'inline-block',\r\n        margin: '0 8px',\r\n        border: '1px solid #ccc'}}\r\n        key={ing.name} >{ing.name} ({ing.value}) </span>;\r\n    });\r\n  \r\n    return (\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingOutput} </p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n        </div>\r\n    );\r\n}\r\nexport default Order;","import React,{ Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from '../../store/actions/index'; \r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nclass Orders extends Component {\r\n\r\n\r\n    componentDidMount(){\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n    \r\n    render () {\r\n        let orders = <Spinner/>;\r\n        if (!this.props.loading ) {\r\n           orders=  this.props.orders.map(ord => (\r\n         <Order key={ord.id} ingredients={ord.ingrediants} price={ord.price} />\r\n            ))\r\n        }\r\n        \r\n        return(\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId)=> dispatch(actions.fetchOrders(token, userId))\r\n    }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}